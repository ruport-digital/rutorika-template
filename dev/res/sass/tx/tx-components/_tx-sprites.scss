// Sprite Block

@mixin tx-sprite-block($name, $padding: false) {
  width: nth($name, 5);
  @if $padding {
    height: 0;
    padding: nth($name, 6) 0 0;
    overflow: hidden;
  } @else {
    height: nth($name, 6);
  }
}

// Sprite Block

@mixin tx-sprite-block-rel($name) {
  &:before {
    @include tx-pseudo(relative);
    padding: ((nth($name, 6) / nth($name, 5)) * 100%) 0 0;
  }
}

// Sprite Image

@mixin tx-sprite-image($name) {
  $sheet: txf-spriteSheetName($name);
  @extend #{'%ssh-' + $sheet};
}

// Sprite Position

@mixin tx-sprite-position($name) {
  background-position: nth($name, 3) nth($name, 4);
}

// Sprite Position With Relative Size

@mixin tx-sprite-position-rel($name) {
  $x: txf-strip-units(nth($name, 1));
  $y: txf-strip-units(nth($name, 2));
  $width: txf-strip-units(nth($name, 5));
  $height: txf-strip-units(nth($name, 6));
  $totalWidth: txf-strip-units(nth($name, 7));
  $totalHeight: txf-strip-units(nth($name, 8));
  $horPos: $x / $totalWidth;
  $horSize: $width / $totalWidth;
  $horShift: $x / ($totalWidth - $width);
  $hor: ($horPos + $horSize * $horShift) * 100%;
  $vertPos: $y / $totalHeight;
  $vertSize: $height / $totalHeight;
  $vertShift: $y / ($totalHeight - $height);
  $vert: ($vertPos + $vertSize * $vertShift) * 100%;
  background-position: $hor $vert;
}

// Background Size With Relative Size

@mixin tx-sprite-size-rel($name) {
  background-size: ((nth($name, 7) / nth($name, 5)) * 100%)
    ((nth($name, 8) / nth($name, 6)) * 100%);
}

// Sprite Image

@mixin tx-sprite(
  $name,
  $block: false,
  $padding: false,
  $position: true,
  $color: null
) {
  @include tx-sprite-image($name);
  @if $block {
    @include tx-sprite-block($name, $padding);
  }
  @if $color {
    background-color: $color;
  }
  @if $position {
    @include tx-sprite-position($name);
  }
}

// Sprite Image With Relative Size

@mixin tx-sprite-rel($name, $block: false, $position: true, $color: null) {
  @include tx-sprite-image($name);
  @if $block {
    @include tx-sprite-block-rel($name);
  }
  @if $color {
    background-color: $color;
  }
  @if $position {
    @include tx-sprite-position-rel($name);
  }
  @include tx-sprite-size-rel($name);
}

// Sprite Shift

@mixin tx-sprite-shift($name, $x: 0, $y: 0) {
  margin: ((txf-sprite-height($name) / -2) + $y) 0 0
    ((txf-sprite-width($name) / -2) + $x);
}

// Functions

@function txf-sprite-width($name) {
  @return nth($name, 5);
}

@function txf-sprite-height($name) {
  @return nth($name, 6);
}

@function txf-spriteSheetName($name) {
  $string: nth($name, 9);
  $length: str-length($string);
  $index: str-index($string, '/');
  @while $index != null {
    $string: str-slice($string, ($index + 1), $length);
    $length: str-length($string);
    $index: str-index($string, '/');
  }
  $index: str-index($string, '.');
  $string: str-slice($string, 0, ($index - 1));
  @return $string;
}

@function txf-strip-units($value) {
  @return $value / ($value * 0 + 1);
}
